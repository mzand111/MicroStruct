// <auto-generated />
using System;
using MicroStruct.Services.Dashboard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroStruct.Services.Dashboard.Data.Migrations
{
    [DbContext(typeof(DashboardDbContext))]
    [Migration("20221109133730_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MicroStruct.Services.Dashboard.Data.Entities.WidgetAccessEntity", b =>
                {
                    b.Property<Guid>("WidgetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid?>("DepartmentID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WidgetID", "RoleName");

                    b.ToTable("WidgetAccesses");
                });

            modelBuilder.Entity("MicroStruct.Services.Dashboard.Data.Entities.WidgetEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DefaultHeight")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ID");

                    b.ToTable("Widgets");
                });

            modelBuilder.Entity("MicroStruct.Services.Dashboard.Data.Entities.WidgetInstanceEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Config")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerID")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ContainerStructureID")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(100);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(102);

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(103);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(101);

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<Guid>("WidgetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Width")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("WindgetInstances");
                });

            modelBuilder.Entity("MicroStruct.Services.Dashboard.Data.Entities.WidgetAccessEntity", b =>
                {
                    b.HasOne("MicroStruct.Services.Dashboard.Data.Entities.WidgetEntity", "WidgetEntity")
                        .WithMany("WidgetAccessEntities")
                        .HasForeignKey("WidgetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WidgetEntity");
                });

            modelBuilder.Entity("MicroStruct.Services.Dashboard.Data.Entities.WidgetEntity", b =>
                {
                    b.Navigation("WidgetAccessEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
