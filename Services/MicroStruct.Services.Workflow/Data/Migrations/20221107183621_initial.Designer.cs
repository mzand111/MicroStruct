// <auto-generated />
using System;
using MicroStruct.Services.WorkflowApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroStruct.Services.WorkflowApi.Data.Migrations
{
    [DbContext(typeof(LoanContext))]
    [Migration("20221107183621_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MicroStruct.Services.WorkflowApi.Models.DepartmentLocal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepartmentLocals");
                });

            modelBuilder.Entity("MicroStruct.Services.WorkflowApi.Models.LoanRequestLocal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AcceptedAmount")
                        .HasColumnType("float");

                    b.Property<double?>("AcceptedRate")
                        .HasColumnType("float");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyNationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentActivityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStepDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStepFormalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DepartmentSUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DirectDepartmentExpertUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityRequestTotalState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Financial_CurrentActivityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Financial_CurrentStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Financial_CurrentStepDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Financial_CurrentStepFormalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Financial_FacilityRequestTotalState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Financial_InThisStateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Financial_WorkflowFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Financial_WorkflowInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Financial_WorkflowStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InThisStateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastMidificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramTypeID")
                        .HasColumnType("int");

                    b.Property<byte>("ProgramTypeKindID")
                        .HasColumnType("tinyint");

                    b.Property<double?>("RequestedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("WorkflowFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkflowInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkflowStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LoanRequestLocals");
                });

            modelBuilder.Entity("MicroStruct.Services.WorkflowApi.Models.LoanRequestPermission", b =>
                {
                    b.Property<int>("StateActionID")
                        .HasColumnType("int");

                    b.Property<Guid>("LoanRequestLocalID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleLocalID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StateActionID", "LoanRequestLocalID", "RoleLocalID");

                    b.HasIndex("LoanRequestLocalID");

                    b.HasIndex("RoleLocalID");

                    b.ToTable("LoanRequestPermissions");
                });

            modelBuilder.Entity("MicroStruct.Services.WorkflowApi.Models.RoleLocal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleLocals");
                });

            modelBuilder.Entity("MicroStruct.Services.WorkflowApi.Models.StateAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HiddenAction")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StateActions");
                });

            modelBuilder.Entity("MicroStruct.Services.WorkflowApi.Models.LoanRequestPermission", b =>
                {
                    b.HasOne("MicroStruct.Services.WorkflowApi.Models.LoanRequestLocal", "LoanRequestLocal")
                        .WithMany()
                        .HasForeignKey("LoanRequestLocalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroStruct.Services.WorkflowApi.Models.RoleLocal", "RoleLocal")
                        .WithMany()
                        .HasForeignKey("RoleLocalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroStruct.Services.WorkflowApi.Models.StateAction", "StateAction")
                        .WithMany()
                        .HasForeignKey("StateActionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanRequestLocal");

                    b.Navigation("RoleLocal");

                    b.Navigation("StateAction");
                });
#pragma warning restore 612, 618
        }
    }
}
